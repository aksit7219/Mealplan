import api from "@/config";
import { Loader } from "@/widgets/layout";
import Button from "@/widgets/layout/button";
import { Card, Typography } from "@material-tailwind/react";
import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";

const KitchenProduction = () => {
  const [report, setreport] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const navigate = useNavigate();

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await api.get(`api/report`);
        setreport(response.data.data);
        setIsLoading(false);
      } catch (error) {
        console.error("Error fetching data:", error);
        setIsLoading(false);
      }
    };

    fetchData();
  }, []);

  const headers = [
    "Name",
    "Sub recipes and total quantities",
    "Total portions of today",
    "Total Plates",
  ];

  if (isLoading) {
    return <Loader message="Loading kitchen production data..." />;
  }

  if (!report || report.length === 0) {
    return (
      <div className="rounded-lg p-6 mb-8">
        <div className="flex flex-col items-center justify-center h-[80vh] space-y-4">
          <h2 className="text-2xl font-semibold text-gray-700">
            No Kitchen Production Data
          </h2>
          <p className="text-gray-500">
            There are no items to prepare in the kitchen for today.
          </p>
          <Button variant="filled" onClick={() => navigate("/menu")}>
            Go to Menu
          </Button>
        </div>
      </div>
    );
  }
  return (
    <>
      <Card className="h-full w-full overflow-scroll">
        <table className="w-full min-w-max table-auto text-left">
          <thead>
            <tr>
              {headers.map((header, index) => (
                <th
                  key={index}
                  className="border border-blue-gray-100 bg-blue-gray-50 text-left p-4 text-sm font-medium text-blue-gray-800 uppercase"
                >
                  {header}
                </th>
              ))}
            </tr>
          </thead>
          <tbody>
            {report.map((reportItem, reportIndex) => (
              <>
                {reportItem.count > 0 ? (
                  <tr
                    key={reportIndex}
                    className="even:bg-blue-gray-50/50 hover:bg-green-100"
                  >
                    <td className="p-4 border border-blue-gray-100">
                      <Typography
                        variant="lead"
                        color="blue-gray"
                        className="font-normal"
                      >
                        {reportItem.dishName}
                      </Typography>
                      <Typography
                        variant="small"
                        color="blue-gray"
                        className="font-normal"
                      >
                        {reportItem.dishDietType}
                      </Typography>
                      {/* Assuming `name` is a property of `item` */}
                    </td>
                    <td className="p-4 border border-blue-gray-100">
                      <Typography
                        variant="small"
                        color="blue-gray"
                        className="font-normal"
                      >
                        {reportItem.totalGrams}{" "}
                        {/* Assuming `name` is a property of `reportItem.dish` */}
                      </Typography>
                    </td>
                    <td className="p-4 border border-blue-gray-100">
                      {reportItem.sizes.map((size, index) => (
                        <div
                          key={index}
                          className="border-b border-dashed border-gray-400 py-2"
                        >
                          {/* Size Header */}
                          <Typography
                            variant="small"
                            color="blue-gray"
                            className="font-bold uppercase mb-1"
                          >
                            {size.size}
                          </Typography>

                          {/* Ingredients List */}
                          <div className="ml-4 space-y-1">
                            {size.ingredients.map((ing, idx) => (
                              <Typography
                                key={idx}
                                variant="small"
                                color="blue-gray"
                                className="font-normal"
                              >
                                {ing.grams + "g " + ing.name}
                              </Typography>
                            ))}
                          </div>
                        </div>
                      ))}
                    </td>
                    <td className="p-4 border border-blue-gray-100">
                      <Typography
                        variant="small"
                        color="blue-gray"
                        className="font-normal"
                      >
                        {reportItem.count}{" "}
                        {/* Assuming `name` is a property of `reportItem.dish` */}
                      </Typography>
                    </td>
                  </tr>
                ) : (
                  ""
                )}
              </>
            ))}
          </tbody>
        </table>
      </Card>
    </>
  );
};

export default KitchenProduction;
